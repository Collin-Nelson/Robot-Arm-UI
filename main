# Main file for the test UI

import numpy, wx

class MainFrame(wx.Frame):
    def __init__(self):
        super().__init__(parent=None, title='UI Test', size=(1250, 750))

        p = wx.Panel(self)
        nb = wx.Notebook(p)

        tab1 = ControlTab(nb)
        tab2 = Tab2(nb)

        nb.AddPage(tab1, "Tab 1")
        nb.AddPage(tab2, "Tab 2")

        sizer = wx.BoxSizer()
        sizer.Add(nb, 1, wx.EXPAND)
        p.SetSizer(sizer)


class ControlTab(wx.Panel):
    def __init__(self, parent):
        wx.Panel.__init__(self, parent)
        #t = wx.StaticText(self, -1, "Controls Tab", (20,20))

        self.SetBackgroundColour('gray')

        self.Panel = AngleDisplayPanel(self)
        self.Panel = AngleInputPanel(self)
        self.Panel = HomeCommands(self)
        self.Panel = ZeroCommands(self)
        self.Panel = TextCommand(self)

class Tab2(wx.Panel):
    def __init__(self, parent):
        wx.Panel.__init__(self, parent)
        #t = wx.StaticText(self, -1, "Second Tab", (20,20))

        self.SetBackgroundColour('gray')


class AngleDisplayPanel(wx.Panel):
    def __init__(self, parent):
        wx.Panel.__init__(self, parent = parent, pos = (5, 5), size = (200, 200), style=wx.SUNKEN_BORDER)

        title = wx.StaticText(self, label = "Joint Angle Display", size=(200,18), style=wx.ALIGN_CENTER_HORIZONTAL)
        self.SetBackgroundColour('white')
        font = title.GetFont()
        font.PointSize = 12
        font = font.Bold()
        title.SetFont(font)

        # Add rectangular status lights to display if endstops are currently pressed
        self.statusLight1 = wx.StaticBox(self, wx.ID_ANY, "", size=(20,20), pos=(5,25), style=wx.SUNKEN_BORDER)
        self.statusLight2 = wx.StaticBox(self, wx.ID_ANY, "", size=(20,20), pos=(5,55), style=wx.SUNKEN_BORDER)
        self.statusLight3 = wx.StaticBox(self, wx.ID_ANY, "", size=(20,20), pos=(5,85), style=wx.SUNKEN_BORDER)
        self.statusLight4 = wx.StaticBox(self, wx.ID_ANY, "", size=(20,20), pos=(5,115), style=wx.SUNKEN_BORDER)
        self.statusLight5 = wx.StaticBox(self, wx.ID_ANY, "", size=(20,20), pos=(5,145), style=wx.SUNKEN_BORDER)
        self.statusLight6 = wx.StaticBox(self, wx.ID_ANY, "", size=(20,20), pos=(5,175), style=wx.SUNKEN_BORDER)

        # Labels for the joint angle text boxes
        lbl1 = wx.StaticText(self, label="J1", pos=(40,25))
        lbl2 = wx.StaticText(self, label="J2", pos=(40,55))
        lbl3 = wx.StaticText(self, label="J3", pos=(40,85))
        lbl4 = wx.StaticText(self, label="J4", pos=(40,115))
        lbl5 = wx.StaticText(self, label="J5", pos=(40,145))
        lbl6 = wx.StaticText(self, label="J6", pos=(40,175))

        # Set the font of the labels on the joint angle display textctrl boxes
        lblfont = lbl1.GetFont()
        lblfont.PointSize = 10
        lblfont = lblfont.Bold()
        lbl1.SetFont(lblfont)
        lbl2.SetFont(lblfont)
        lbl3.SetFont(lblfont)
        lbl4.SetFont(lblfont)
        lbl5.SetFont(lblfont)
        lbl6.SetFont(lblfont)

        # Text boxes to display the current angle of each joint
        self.tc1 = wx.TextCtrl(self, pos=(65, 25), style=wx.TE_READONLY)
        self.tc2 = wx.TextCtrl(self, pos=(65, 55), style=wx.TE_READONLY)
        self.tc3 = wx.TextCtrl(self, pos=(65, 85), style=wx.TE_READONLY)
        self.tc4 = wx.TextCtrl(self, pos=(65, 115), style=wx.TE_READONLY)
        self.tc5 = wx.TextCtrl(self, pos=(65, 145), style=wx.TE_READONLY)
        self.tc6 = wx.TextCtrl(self, pos=(65, 175), style=wx.TE_READONLY)

        #set the angle value in the text control box
        self.tc1.SetValue('0')
        self.tc2.SetValue('0')
        self.tc3.SetValue('0')
        self.tc4.SetValue('0')
        self.tc5.SetValue('0')
        self.tc6.SetValue('0')


class AngleInputPanel(wx.Panel):
    def __init__(self, parent):
        wx.Panel.__init__(self, parent = parent, pos = (210, 5), size = (200, 200), style=wx.SUNKEN_BORDER)

        title = wx.StaticText(self, label = "Joint Angle Inputs", size=(200,18), style=wx.ALIGN_CENTER_HORIZONTAL)
        self.SetBackgroundColour('white')

        font = title.GetFont()
        font.PointSize = 12
        font = font.Bold()
        title.SetFont(font)

        # Text input boxes for the angle for each joint
        self.tc1 = wx.TextCtrl(self, pos=(90, 20))
        self.tc2 = wx.TextCtrl(self, pos=(90, 50))
        self.tc3 = wx.TextCtrl(self, pos=(90, 80))
        self.tc4 = wx.TextCtrl(self, pos=(90, 110))
        self.tc5 = wx.TextCtrl(self, pos=(90, 140))
        self.tc6 = wx.TextCtrl(self, pos=(90, 170))

        # Buttons to trigger moving to the specified number of degrees
        btn1 = wx.Button(self, label='Move J1', pos=(5, 20))
        btn2 = wx.Button(self, label='Move J2', pos=(5, 50))
        btn3 = wx.Button(self, label='Move J3', pos=(5, 80))
        btn4 = wx.Button(self, label='Move J4', pos=(5, 110))
        btn5 = wx.Button(self, label='Move J5', pos=(5, 140))
        btn6 = wx.Button(self, label='Move J6', pos=(5, 170))

        # Bind each button to its action
        btn1.Bind(wx.EVT_BUTTON, self.btn1Press)
        btn2.Bind(wx.EVT_BUTTON, self.btn2Press)
        btn3.Bind(wx.EVT_BUTTON, self.btn3Press)
        btn4.Bind(wx.EVT_BUTTON, self.btn4Press)
        btn5.Bind(wx.EVT_BUTTON, self.btn5Press)
        btn6.Bind(wx.EVT_BUTTON, self.btn6Press)


    # Actions for each button

    def btn1Press(self, event):
        value = self.tc1.GetValue()
        if not value:
            print("You didn't enter anything!")
        else:
            print(f'You typed: "{value}"')

    def btn2Press(self, event):
        value = self.tc2.GetValue()
        if not value:
            print("You didn't enter anything!")
        else:
            print(f'You typed: "{value}"')

    def btn3Press(self, event):
        value = self.tc3.GetValue()
        if not value:
            print("You didn't enter anything!")
        else:
            print(f'You typed: "{value}"')

    def btn4Press(self, event):
        value = self.tc4.GetValue()
        if not value:
            print("You didn't enter anything!")
        else:
            print(f'You typed: "{value}"')

    def btn5Press(self, event):
        value = self.tc5.GetValue()
        if not value:
            print("You didn't enter anything!")
        else:
            print(f'You typed: "{value}"')

    def btn6Press(self, event):
        value = self.tc6.GetValue()
        if not value:
            print("You didn't enter anything!")
        else:
            print(f'You typed: "{value}"')


class HomeCommands(wx.Panel):
    def __init__(self, parent):
        wx.Panel.__init__(self, parent = parent, pos = (415, 5), size = (200, 200), style=wx.SUNKEN_BORDER)

        title = wx.StaticText(self, label = "Homing", size=(200,18), style=wx.ALIGN_CENTER_HORIZONTAL)
        self.SetBackgroundColour('white')

        font = title.GetFont()
        font.PointSize = 12
        font = font.Bold()
        title.SetFont(font)

        # Button to home selected axes
        homeBtn = wx.Button(self, label='Home Selected Axes', pos=(5, 20))

        # Bind home button to its action
        homeBtn.Bind(wx.EVT_BUTTON, self.homeBtnPress)

        # Checkbox for each axis to home
        self.chk1 = wx.CheckBox(self, label="Joint 1", pos=(10,50))
        self.chk2 = wx.CheckBox(self, label="Joint 2", pos=(10,70))
        self.chk3 = wx.CheckBox(self, label="Joint 3", pos=(10,90))
        self.chk4 = wx.CheckBox(self, label="Joint 4", pos=(10,110))
        self.chk5 = wx.CheckBox(self, label="Joint 5", pos=(10,130))
        self.chk6 = wx.CheckBox(self, label="Joint 6", pos=(10,150))

        # Sets checkboxes to default to checked
        self.chk1.SetValue(1)
        self.chk2.SetValue(1)
        self.chk3.SetValue(1)
        self.chk4.SetValue(1)
        self.chk5.SetValue(1)
        self.chk6.SetValue(1)

    # Deals with homing button press
    def homeBtnPress(self, event):
        print("Home Button Pressed")
        if self.chk1.GetValue():
            print("Homing joint 1")
        if self.chk2.GetValue():
            print("Homing joint 2")
        if self.chk3.GetValue():
            print("Homing joint 3")
        if self.chk4.GetValue():
            print("Homing joint 4")
        if self.chk5.GetValue():
            print("Homing joint 5")
        if self.chk6.GetValue():
            print("Homing joint 6")

class ZeroCommands(wx.Panel):
    def __init__(self, parent):
        wx.Panel.__init__(self, parent = parent, pos = (620, 5), size = (200, 200), style=wx.SUNKEN_BORDER)

        title = wx.StaticText(self, label = "Zeroing", size=(200,18), style=wx.ALIGN_CENTER_HORIZONTAL)
        self.SetBackgroundColour('white')

        font = title.GetFont()
        font.PointSize = 12
        font = font.Bold()
        title.SetFont(font)

        # Button to zero selected axes
        zeroBtn = wx.Button(self, label='Zero Selected Axes', pos=(5, 20))

        # Bind zero button to its action
        zeroBtn.Bind(wx.EVT_BUTTON, self.zeroBtnPress)

        # Checkbox for each axis to zero
        self.chk1 = wx.CheckBox(self, label="Joint 1", pos=(10,50))
        self.chk2 = wx.CheckBox(self, label="Joint 2", pos=(10,70))
        self.chk3 = wx.CheckBox(self, label="Joint 3", pos=(10,90))
        self.chk4 = wx.CheckBox(self, label="Joint 4", pos=(10,110))
        self.chk5 = wx.CheckBox(self, label="Joint 5", pos=(10,130))
        self.chk6 = wx.CheckBox(self, label="Joint 6", pos=(10,150))

        # Sets checkboxes to default to checked
        self.chk1.SetValue(1)
        self.chk2.SetValue(1)
        self.chk3.SetValue(1)
        self.chk4.SetValue(1)
        self.chk5.SetValue(1)
        self.chk6.SetValue(1)

    # Deals with zero button press
    def zeroBtnPress(self, event):
        print("Zero Button Pressed")
        if self.chk1.GetValue():
            print("Zeroing joint 1")
        if self.chk2.GetValue():
            print("Zeroing joint 2")
        if self.chk3.GetValue():
            print("Zeroing joint 3")
        if self.chk4.GetValue():
            print("Zeroing joint 4")
        if self.chk5.GetValue():
            print("Zeroing joint 5")
        if self.chk6.GetValue():
            print("Zeroing joint 6")


class TextCommand(wx.Panel):
    def __init__(self, parent):
        wx.Panel.__init__(self, parent = parent, pos = (825, 5), size = (200, 200), style=wx.SUNKEN_BORDER)

        title = wx.StaticText(self, label = "Text Command", size=(200,18), style=wx.ALIGN_CENTER_HORIZONTAL)
        self.SetBackgroundColour('white')

        font = title.GetFont()
        font.PointSize = 12
        font = font.Bold()
        title.SetFont(font)

        # Text control for inputting text commands to be sent directly over serial
        self.comtc = wx.TextCtrl(self, pos=(35, 40))

        # Button to send command string
        comBtn = wx.Button(self, label='Send Command String', pos=(20, 70))

        # Bind zero button to its action
        comBtn.Bind(wx.EVT_BUTTON, self.comBtnPress)


    # Deals with zero button press
    def comBtnPress(self, event):
        print("Send Command Button Pressed")
        print(f"Test string is:", (self.comtc.GetValue()))




def main():
    app = wx.App()
    frame = MainFrame()
    frame.Show()

    app.MainLoop()

if __name__ == '__main__':
    main()
